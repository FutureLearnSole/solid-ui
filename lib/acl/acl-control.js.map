{"version":3,"sources":["../../src/acl/acl-control.ts"],"names":["preventBrowserDropEvents","document","debug","log","global","window","preventBrowserDropEventsDone","preventDrag","e","stopPropagation","preventDefault","handleDrop","dataTransfer","files","length","confirm","dropEffect","addEventListener","shortNameForFolder","x","str","uri","slice","slash","lastIndexOf","ACLControlBox5","subject","context","noun","kb","dom","doc","classes","head","styles","container","createElement","classList","add","aclControlBoxContainer","header","appendChild","textContent","utils","label","aclControlBoxHeader","status","aclControlBoxStatus","loadController","then","controller","render","error","innerText","Promise","resolve","reject","ok","isDirectACL","targetDoc","targetACLDoc","defaultHolder","defaultACLDoc","getController","prospectiveDefaultHolder","AccessController","targetIsProtected","Error","targetDirectory","getDirectory","isStorage","hasProtectedAcl","warn","split","p","q","indexOf","aclDoc","store","holds","ns","rdf","space","site"],"mappings":"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","sourcesContent":["/**\n * Functions for rendering the ACL User Interface.\n * See https://github.com/solid/userguide/blob/master/views/sharing/userguide.md#view\n * for a screenshot.\n * @packageDocumentation\n */\n\nimport ns from '../ns'\nimport utils from '../utils.js'\nimport { getACLorDefault, getProspectiveHolder } from './acl'\nimport { IndexedFormula, NamedNode } from 'rdflib'\nimport { DataBrowserContext } from 'pane-registry'\nimport { AccessController } from './access-controller'\nimport { getClasses } from '../jss'\nimport { styles } from './styles'\nimport * as debug from '../debug'\n\n/**\n * See https://coshx.com/preventing-drag-and-drop-disasters-with-a-chrome-userscript\n * Without this dropping anything onto a browser page will cause chrome etc to jump to diff page\n * throwing away all the user's work.\n *\n * In apps which may use drag and drop, this utility takes care of the fact\n * by default in a browser, an uncaught user drop into a browser window\n * causes the browser to lose all its work in that window and navigate to another page\n *\n * @param document  The DOM\n * @returns void\n */\nexport function preventBrowserDropEvents (document: HTMLDocument): void {\n  debug.log('preventBrowserDropEvents called.')\n  const global: any = window\n  if (typeof global !== 'undefined') {\n    if (global.preventBrowserDropEventsDone) return\n    global.preventBrowserDropEventsDone = true\n  }\n\n  function preventDrag (e) {\n    e.stopPropagation()\n    e.preventDefault()\n  }\n\n  function handleDrop (e) {\n    if (e.dataTransfer.files.length > 0) {\n      if (\n        !confirm(\n          'Are you sure you want to drop this file here? ' +\n          '(Cancel opens it in a new tab)'\n        )\n      ) {\n        e.stopPropagation()\n        e.preventDefault()\n        debug.log(\n          '@@@@ document-level DROP suppressed: ' + e.dataTransfer.dropEffect\n        )\n      }\n    }\n  }\n\n  document.addEventListener('drop', handleDrop, false)\n  document.addEventListener('dragenter', preventDrag, false)\n  document.addEventListener('dragover', preventDrag, false)\n}\n\n/**\n * Get a folder's own filename in the directory tree. Also works for\n * domain names; the URL protocol ('https://') acts as the tree root\n * with short name '/' (see also test/unit/acl/acl-control.test.ts).\n *\n * ```typescript\n * shortNameForFolder($rdf.namedNode('http://example.com/some/folder/'))\n * // 'folder'\n *\n * shortNameForFolder($rdf.namedNode('http://example.com/some/folder'))\n * // 'folder'\n *\n * shortNameForFolder($rdf.namedNode('http://example.com/'))\n * // 'example.com'\n *\n * shortNameForFolder($rdf.namedNode('http://example.com'))\n * // 'example.com'\n *\n * shortNameForFolder($rdf.namedNode('http://'))\n * // '/'\n * ```\n *\n * It also works with relative URLs:\n * ```typescript\n * shortNameForFolder($rdf.namedNode('../folder/'))\n * // 'folder'\n * ```\n *\n * @param x  RDF Node for the folder URL\n * @returns  Short name for the folder\n */\nexport function shortNameForFolder (x: NamedNode): string {\n  let str = x.uri\n\n  // Strip the trailing slash\n  if (str.slice(-1) === '/') {\n    str = str.slice(0, -1)\n  }\n\n  // Remove the path if present, keeping only the part\n  // after the last slash.\n  const slash = str.lastIndexOf('/')\n  if (slash >= 0) {\n    str = str.slice(slash + 1)\n  }\n  // Return the folder's filename, or '/' if nothing found\n  // (but see https://github.com/solid/solid-ui/issues/196\n  // regarding whether this happens at the domain root or\n  // not)\n  return str || '/'\n}\n\n/**\n * A wrapper that retrieves ACL data and uses it\n * to render an [[AccessController]] component.\n * Presumably the '5' is a version number of some sort,\n * but all we know is it was already called ACLControlBox5\n * when it was introduced into solid-ui in\n * https://github.com/solid/solid-ui/commit/948b874bd93e7bf5160e6e224821b888f07d15f3#diff-4192a29f38a0ababd563b36b47eba5bbR54\n */\nexport function ACLControlBox5 (\n  subject: NamedNode,\n  context: DataBrowserContext,\n  noun: string,\n  kb: IndexedFormula\n): HTMLElement {\n  const dom = context.dom\n  const doc = subject.doc() // The ACL is actually to the doc describing the thing\n  const classes = getClasses(dom.head, styles).classes\n\n  const container = dom.createElement('div')\n  container.classList.add(classes.aclControlBoxContainer)\n\n  const header = container.appendChild(dom.createElement('h1'))\n  header.textContent = `Sharing for ${noun} ${utils.label(subject)}`\n  header.classList.add(classes.aclControlBoxHeader)\n\n  const status = container.appendChild(dom.createElement('div'))\n  status.classList.add(classes.aclControlBoxStatus)\n\n  try {\n    loadController(doc, kb, subject, noun, context, classes, dom, status)\n      .then(controller => container.appendChild(controller.render()))\n  } catch (error) {\n    status.innerText = error\n  }\n\n  return container\n}\n\nasync function loadController (\n  doc: NamedNode,\n  kb: IndexedFormula,\n  subject: NamedNode,\n  noun: string,\n  context: DataBrowserContext,\n  classes: Record<string, string>,\n  dom: HTMLDocument,\n  status: HTMLElement\n): Promise<AccessController> {\n  return new Promise((resolve, reject) => getACLorDefault(doc, async (\n    ok,\n    isDirectACL,\n    targetDoc,\n    targetACLDoc,\n    defaultHolder,\n    defaultACLDoc\n  ) => {\n    if (!ok) {\n      return reject(new Error(`Error reading ${isDirectACL ? '' : ' default '}ACL. status ${targetDoc}: ${targetACLDoc}`))\n    }\n    const targetDirectory = getDirectory(targetDoc as NamedNode)\n    const targetIsProtected = isStorage(targetDoc as NamedNode, targetACLDoc as NamedNode, kb) || hasProtectedAcl(targetDoc as NamedNode)\n    if (!targetIsProtected && targetDirectory) {\n      try {\n        const prospectiveDefaultHolder = await getProspectiveHolder(targetDirectory)\n        return resolve(getController(prospectiveDefaultHolder))\n      } catch (error) {\n        // No need to show this error in status, but good to warn about it in console\n        debug.warn(error)\n      }\n    }\n    return resolve(getController())\n\n    function getController (prospectiveDefaultHolder?: NamedNode) {\n      return new AccessController(subject, noun, context, status, classes, targetIsProtected, targetDoc as NamedNode, targetACLDoc as NamedNode, defaultHolder as NamedNode,\n        defaultACLDoc as NamedNode, prospectiveDefaultHolder, kb, dom)\n    }\n  }))\n}\n\nfunction getDirectory (doc: NamedNode): string | null {\n  const str = doc.uri.split('#')[0]\n  const p = str.slice(0, -1).lastIndexOf('/')\n  const q = str.indexOf('//')\n  return (q >= 0 && p < q + 2) || p < 0 ? null : str.slice(0, p + 1)\n}\n\nfunction isStorage (doc: NamedNode, aclDoc: NamedNode, store: IndexedFormula): boolean {\n  // @@ TODO: The methods used for targetIsStorage are HACKs - it should not be relied upon, and work is\n  // @@ underway to standardize a behavior that does not rely upon this hack\n  // @@ hopefully fixed as part of https://github.com/solid/data-interoperability-panel/issues/10\n  return store.holds(doc, ns.rdf('type'), ns.space('Storage'), aclDoc)\n}\n\nfunction hasProtectedAcl (targetDoc: NamedNode): boolean {\n  // @@ TODO: This is hacky way of knowing whether or not a certain ACL file can be removed\n  // Hopefully we'll find a better, standardized solution to this - https://github.com/solid/specification/issues/37\n  return targetDoc.uri === targetDoc.site().uri\n}\n"],"file":"acl-control.js"}