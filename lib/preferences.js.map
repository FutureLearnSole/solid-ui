{"version":3,"sources":["../src/preferences.js"],"names":["kb","require","ns","authn","widgets","pad","module","exports","value","get","k","set","v","console","log","Error","renderPreferencesForm","recordSharedPreferences","getPreferencesForClass","subject","context","Promise","resolve","reject","sharedPreferences","any","ui","sp","$rdf","sym","doc","uri","ins","st","updater","update","ok","errorMessage","recordPersonalDefaults","theClass","logInLoadPreferences","then","preferencesFile","preferencesFileError","regs","each","solid","prefs","reg","length","forEach","r","personalDefaults","newThing","rdf","push","errm","err","preferencesForm","prefContainer","dom","createElement","participationObject","me","participation","heading","text","appendChild","textContent","noun","appendForm","mes","complain","errorMessageBlock","toJS","term","datatype","equals","xsd","Date","Number","predicates","results","pred","v1"],"mappings":"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","sourcesContent":["/* global $rdf */\n//                  Solid-UI temporary preferences\n//                  ==============================\n//\nconst kb = require('./store')\nconst ns = require('./ns')\nconst authn = require('./authn/authn')\nconst widgets = require('./widgets')\nconst pad = require('./pad')\n\n// This was tabulator . preferences in the tabulator\n//\nmodule.exports = {\n  // used for storing user name\n  value: [],\n  get: function (k) {\n    // original\n    return this.value[k]\n  },\n  set: function (k, v) {\n    if (typeof v !== 'string') {\n      console.log('Non-string value of preference ' + k + ': ' + v)\n      throw new Error('Non-string value of preference ' + k + ': ' + v)\n    }\n    this.value[k] = v\n  },\n  renderPreferencesForm,\n  recordSharedPreferences,\n  getPreferencesForClass\n}\n// In a solid world, Preferences are stored in the web\n//\n// Make an RDF node for recording the common view preferences for any object\n// (maybe make it in a separate file?)\nfunction recordSharedPreferences (subject, context) {\n  return new Promise(function (resolve, reject) {\n    var sharedPreferences = kb.any(subject, ns.ui('sharedPreferences'))\n    if (!sharedPreferences) {\n      const sp = $rdf.sym(subject.doc().uri + '#SharedPreferences')\n      const ins = [\n        $rdf.st(subject, ns.ui('sharedPreferences'), sp, subject.doc())\n      ]\n      console.log('Creating shared preferences ' + sp)\n      kb.updater.update([], ins, function (uri, ok, errorMessage) {\n        if (!ok) {\n          reject(new Error('Error creating shared prefs: ' + errorMessage))\n        } else {\n          context.sharedPreferences = sp\n          resolve(context)\n        }\n      })\n    } else {\n      context.sharedPreferences = sharedPreferences\n      resolve(context)\n    }\n  })\n}\n\n// Construct a personal defaults node in the preferences file for a given class of object\n//\nfunction recordPersonalDefaults (theClass, context) {\n  return new Promise(function (resolve, reject) {\n    authn.logInLoadPreferences(context).then(\n      context => {\n        if (!context.preferencesFile) {\n          console.log(\n            'Not doing private class preferences as no access to preferences file. ' +\n              context.preferencesFileError\n          )\n          return\n        }\n        var regs = kb.each(\n          null,\n          ns.solid('forClass'),\n          theClass,\n          context.preferencesFile\n        )\n        var ins = []\n        var prefs\n        var reg\n        if (regs.length) {\n          // Use existing node if we can\n          regs.forEach(r => {\n            prefs = prefs || kb.any(r, ns.solid('personalDefaults'))\n          })\n          if (prefs) {\n            context.personalDefaults = prefs // Found one\n            resolve(context)\n            return\n          } else {\n            prefs = widgets.newThing(context.preferencesFile)\n            reg = regs[0]\n          }\n        } else {\n          // no regs fo class\n          reg = widgets.newThing(context.preferencesFile)\n          ins = [\n            $rdf.st(\n              reg,\n              ns.rdf('type'),\n              ns.solid('TypeRegistration'),\n              context.preferencesFile\n            ),\n            $rdf.st(reg, ns.solid('forClass'), theClass, context.preferencesFile)\n          ]\n        }\n        prefs = widgets.newThing(context.preferencesFile)\n        ins.push(\n          $rdf.st(\n            reg,\n            ns.solid('personalDefaults'),\n            prefs,\n            context.preferencesFile\n          )\n        )\n        kb.updater.update([], ins, function (uri, ok, errm) {\n          if (!ok) {\n            reject(new Error('Setting preferences for ' + theClass + ': ' + errm))\n          } else {\n            context.personalDefaults = prefs\n            resolve(context)\n          }\n        })\n      },\n      err => {\n        reject(err)\n      }\n    )\n  })\n}\n\nfunction renderPreferencesForm (subject, theClass, preferencesForm, context) {\n  var prefContainer = context.dom.createElement('div')\n  pad.participationObject(subject, subject.doc(), context.me).then(\n    participation => {\n      const dom = context.dom\n      function heading (text) {\n        prefContainer.appendChild(dom.createElement('h5')).textContent = text\n      }\n      heading('My view of this ' + context.noun)\n      widgets.appendForm(\n        dom,\n        prefContainer,\n        {},\n        participation,\n        preferencesForm,\n        subject.doc(),\n        (ok, mes) => {\n          if (!ok) widgets.complain(context, mes)\n        }\n      )\n\n      heading(\"Everyone's  view of this \" + context.noun)\n      recordSharedPreferences(subject, context).then(context => {\n        var sharedPreferences = context.sharedPreferences\n        widgets.appendForm(\n          dom,\n          prefContainer,\n          {},\n          sharedPreferences,\n          preferencesForm,\n          subject.doc(),\n          (ok, mes) => {\n            if (!ok) widgets.complain(context, mes)\n          }\n        )\n\n        heading('My default view of any ' + context.noun)\n        recordPersonalDefaults(theClass, context).then(\n          context => {\n            widgets.appendForm(\n              dom,\n              prefContainer,\n              {},\n              context.personalDefaults,\n              preferencesForm,\n              context.preferencesFile,\n              (ok, mes) => {\n                if (!ok) widgets.complain(context, mes)\n              }\n            )\n          },\n          err => {\n            widgets.complain(context, err)\n          }\n        )\n      })\n    },\n    err => {\n      // parp object fails\n      prefContainer.appendChild(widgets.errorMessageBlock(context.dom, err))\n    }\n  )\n  return prefContainer\n}\n\n// This should be part of rdflib.js ad part of the RDFJS Standard!!\n\nfunction toJS (term) {\n  if (!term.datatype) return term // Objects remain objects\n  if (term.datatype.equals(ns.xsd('boolean'))) {\n    return term.value === '1'\n  }\n  if (\n    term.datatype.equals(ns.xsd('dateTime')) ||\n    term.datatype.equals(ns.xsd('date'))\n  ) {\n    return new Date(term.value)\n  }\n  if (\n    term.datatype.equals(ns.xsd('integer')) ||\n    term.datatype.equals(ns.xsd('float')) ||\n    term.datatype.equals(ns.xsd('decimal'))\n  ) {\n    return Number(term.value)\n  }\n  return term.value\n}\n\n// This is the function which acuakly reads and combines the preferences\n//\n//  @@ make it much more tolerant of missing buts of prefernces\nfunction getPreferencesForClass (subject, theClass, predicates, context) {\n  return new Promise(function (resolve, reject) {\n    recordSharedPreferences(subject, context).then(context => {\n      var sharedPreferences = context.sharedPreferences\n      if (context.me) {\n        pad\n          .participationObject(subject, subject.doc(), context.me)\n          .then(participation => {\n            recordPersonalDefaults(theClass, context).then(context => {\n              var results = []\n              var personalDefaults = context.personalDefaults\n              predicates.forEach(pred => {\n                // Order of preference: My settings on object, Global settings on object, my settings on class\n                const v1 =\n                  kb.any(participation, pred) ||\n                  kb.any(sharedPreferences, pred) ||\n                  kb.any(personalDefaults, pred)\n                if (v1) {\n                  results[pred.uri] = toJS(v1)\n                }\n              })\n              resolve(results)\n            }, reject)\n          }, reject)\n      } else {\n        // no user defined, just use common prefs\n        var results = []\n        predicates.forEach(pred => {\n          const v1 = kb.any(sharedPreferences, pred)\n          if (v1) {\n            results[pred.uri] = toJS(v1)\n          }\n        })\n        resolve(results)\n      }\n    })\n  })\n}\n\n// ends\n"],"file":"preferences.js"}